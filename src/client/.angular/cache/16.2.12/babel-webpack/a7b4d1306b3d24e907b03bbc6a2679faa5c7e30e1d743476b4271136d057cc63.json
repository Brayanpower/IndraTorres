{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/ciudad.service\";\nimport * as i2 from \"../../services/datos-pservice.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\nfunction CiudadComponent_option_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pais_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", pais_r3.nombre);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", pais_r3.nombre, \" \");\n  }\n}\nfunction CiudadComponent_option_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ciudad_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", ciudad_r4.nombre);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ciudad_r4.nombre, \" \");\n  }\n}\nfunction CiudadComponent_tr_77_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 37);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function CiudadComponent_tr_77_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const estado_r5 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.editarEstado(estado_r5));\n    });\n    i0.ɵɵtext(11, \"Editar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function CiudadComponent_tr_77_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const estado_r5 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.eliminarEstado(estado_r5._id));\n    });\n    i0.ɵɵtext(13, \"Eliminar\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const estado_r5 = ctx.$implicit;\n    const i_r6 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r6 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(estado_r5.nombre);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(estado_r5.pais);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(estado_r5.ciudad);\n  }\n}\nexport class CiudadComponent {\n  constructor(estadoService, paisService, fb, toastrService) {\n    this.estadoService = estadoService;\n    this.paisService = paisService;\n    this.fb = fb;\n    this.toastrService = toastrService;\n    this.ciudades = [];\n    this.paises = [];\n    this.datosPaises = [];\n    this.editingCiudadId = null; // Inicializado como null\n    this.ciudadForm = this.fb.group({\n      _id: [null],\n      nombre: ['', Validators.required],\n      pais: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.cargarCiudades();\n    this.cargarPaises();\n  }\n  cargarCiudades() {\n    this.estadoService.getDatosP().subscribe(data => {\n      this.ciudades = data;\n      console.log('Ciudades cargadas:', this.ciudades);\n    }, error => {\n      console.error('Error al cargar ciudades:', error);\n    });\n  }\n  cargarPaises() {\n    this.paisService.getDatosP().subscribe(data => {\n      this.datosPaises = data; // Actualizar la propiedad datosPaises\n      console.log('Datos de países cargados:', this.datosPaises);\n    }, error => {\n      console.error('Error al cargar datos de países:', error);\n    });\n  }\n  crearCiudad(event) {\n    event.preventDefault();\n    if (this.ciudadForm.valid) {\n      const nuevaCiudad = {\n        nombre: this.ciudadForm.value.nombre,\n        pais: this.ciudadForm.value.pais\n      };\n      this.estadoService.addDatosP(nuevaCiudad).subscribe(data => {\n        console.log('Ciudad creada:', data);\n        this.ciudadForm.reset();\n        this.cargarCiudades();\n        this.toastrService.success('Ciudad creada correctamente', 'Aviso');\n      }, error => {\n        console.error('Error al crear ciudad:', error);\n        this.toastrService.error('Error al crear la ciudad', 'Error');\n      });\n    } else {\n      console.error('Formulario no válido. Por favor, complete todos los campos requeridos.');\n      this.toastrService.warning('Formulario no válido. Por favor, complete todos los campos requeridos.', 'Advertencia');\n    }\n  }\n  seleccionarCiudad() {\n    // Aquí puedes agregar la lógica que deseas al seleccionar una ciudad\n    console.log('Ciudad seleccionada');\n  }\n  cargarDatosP() {\n    this.paisService.getDatosP().subscribe(data => {\n      this.datosPaises = data;\n      console.log('Datos cargados:', this.datosPaises);\n    }, error => {\n      console.error('Error al cargar datos:', error);\n    });\n  }\n  eliminarCiudad(id) {\n    if (id) {\n      this.estadoService.deleteDatosP(id).subscribe(data => {\n        console.log('Ciudad eliminada:', data);\n        this.cargarCiudades();\n        this.toastrService.success('Ciudad eliminada correctamente', 'Aviso');\n      }, error => {\n        console.error('Error al eliminar ciudad:', error);\n        this.toastrService.error('Error al eliminar la ciudad', 'Error');\n      });\n    }\n  }\n  editarCiudad(ciudad) {\n    this.ciudadForm.patchValue(ciudad);\n  }\n  actualizarCiudad() {\n    if (this.ciudadForm.valid) {\n      this.estadoService.updateDatosP(this.ciudadForm.value).subscribe(() => {\n        this.cargarCiudades();\n        this.ciudadForm.reset();\n        this.toastrService.success('Ciudad actualizada correctamente', 'Aviso');\n      }, error => {\n        console.error('Error al actualizar país:', error);\n        this.toastrService.error('Error al actualizar la ciudad', 'Error');\n      });\n    }\n  }\n  static #_ = this.ɵfac = function CiudadComponent_Factory(t) {\n    return new (t || CiudadComponent)(i0.ɵɵdirectiveInject(i1.EstadoService), i0.ɵɵdirectiveInject(i2.DatosPService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.ToastrService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CiudadComponent,\n    selectors: [[\"app-ciudad\"]],\n    decls: 78,\n    vars: 4,\n    consts: [[1, \"navbar\", \"navbar-expand-lg\", \"navbar-dark\", \"bg-dark\"], [1, \"container-fluid\"], [\"href\", \"#\", 1, \"navbar-brand\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#navbarNav\", \"aria-controls\", \"navbarNav\", \"aria-expanded\", \"false\", \"aria-label\", \"Toggle navigation\", 1, \"navbar-toggler\"], [1, \"navbar-toggler-icon\"], [\"id\", \"navbarNav\", 1, \"collapse\", \"navbar-collapse\"], [1, \"navbar-nav\"], [1, \"nav-item\"], [\"aria-current\", \"page\", \"href\", \"#\", 1, \"nav-link\", \"active\"], [\"href\", \"#\", 1, \"nav-link\"], [\"href\", \"/pais\", 1, \"nav-link\"], [\"href\", \"/ciudad\", 1, \"nav-link\"], [\"href\", \"/estado\", 1, \"nav-link\"], [1, \"container\"], [1, \"row\"], [1, \"col-md-4\"], [1, \"card\"], [1, \"card-body\"], [1, \"card-title\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"city-name\"], [\"type\", \"text\", \"id\", \"city-name\", \"formControlName\", \"nombre\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"country-select\"], [\"id\", \"country-select\", \"formControlName\", \"pais\", 1, \"form-control\"], [\"value\", \"\", \"disabled\", \"\", \"selected\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"city-select\"], [\"id\", \"city-select\", \"formControlName\", \"ciudad\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"ms-2\", 3, \"click\"], [1, \"col-md-8\"], [1, \"table\"], [\"scope\", \"col\"], [\"id\", \"country-table-body\"], [4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"scope\", \"row\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-primary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"btn-sm\", \"ms-2\", 3, \"click\"]],\n    template: function CiudadComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nav\", 0)(1, \"div\", 1)(2, \"a\", 2);\n        i0.ɵɵtext(3, \"RentAuto\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 3);\n        i0.ɵɵelement(5, \"span\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"ul\", 6)(8, \"li\", 7)(9, \"a\", 8);\n        i0.ɵɵtext(10, \"Home\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"li\", 7)(12, \"a\", 9);\n        i0.ɵɵtext(13, \"autos\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"li\", 7)(15, \"a\", 9);\n        i0.ɵɵtext(16, \"Lugar\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"li\", 7)(18, \"a\", 10);\n        i0.ɵɵtext(19, \"Pais\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"li\", 7)(21, \"a\", 11);\n        i0.ɵɵtext(22, \"Ciudad\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"li\", 7)(24, \"a\", 12);\n        i0.ɵɵtext(25, \"Estado\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(26, \"div\", 13);\n        i0.ɵɵelement(27, \"br\");\n        i0.ɵɵelementStart(28, \"div\", 14)(29, \"div\", 15)(30, \"div\", 16)(31, \"div\", 17)(32, \"h5\", 18);\n        i0.ɵɵtext(33, \"Agregar/Editar Estado\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"form\", 19);\n        i0.ɵɵlistener(\"ngSubmit\", function CiudadComponent_Template_form_ngSubmit_34_listener($event) {\n          return ctx.crearEstado($event);\n        });\n        i0.ɵɵelementStart(35, \"div\", 20)(36, \"label\", 21);\n        i0.ɵɵtext(37, \"Nombre del Estado:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(38, \"input\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"div\", 20)(40, \"label\", 23);\n        i0.ɵɵtext(41, \"Selecciona un Pa\\u00EDs:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"select\", 24)(43, \"option\", 25);\n        i0.ɵɵtext(44, \"Elige un pa\\u00EDs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(45, CiudadComponent_option_45_Template, 2, 2, \"option\", 26);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(46, \"div\", 20)(47, \"label\", 27);\n        i0.ɵɵtext(48, \"Selecciona una Ciudad:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"select\", 28)(50, \"option\", 25);\n        i0.ɵɵtext(51, \"Elige una ciudad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(52, CiudadComponent_option_52_Template, 2, 2, \"option\", 26);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(53, \"br\");\n        i0.ɵɵelementStart(54, \"button\", 29);\n        i0.ɵɵtext(55, \"Agregar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"button\", 30);\n        i0.ɵɵlistener(\"click\", function CiudadComponent_Template_button_click_56_listener() {\n          return ctx.actualizarEstado();\n        });\n        i0.ɵɵtext(57, \"Actualizar\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(58, \"div\", 31)(59, \"div\", 16)(60, \"div\", 17)(61, \"h5\", 18);\n        i0.ɵɵtext(62, \"Estados Agregados\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(63, \"table\", 32)(64, \"thead\")(65, \"tr\")(66, \"th\", 33);\n        i0.ɵɵtext(67, \"#\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(68, \"th\", 33);\n        i0.ɵɵtext(69, \"Nombre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(70, \"th\", 33);\n        i0.ɵɵtext(71, \"Pa\\u00EDs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(72, \"th\", 33);\n        i0.ɵɵtext(73, \"Ciudad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(74, \"th\", 33);\n        i0.ɵɵtext(75, \"Acciones\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(76, \"tbody\", 34);\n        i0.ɵɵtemplate(77, CiudadComponent_tr_77_Template, 14, 4, \"tr\", 35);\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(34);\n        i0.ɵɵproperty(\"formGroup\", ctx.estadoForm);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngForOf\", ctx.datosPaises);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.datosCiudad);\n        i0.ɵɵadvance(25);\n        i0.ɵɵproperty(\"ngForOf\", ctx.estados);\n      }\n    },\n    dependencies: [i5.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","pais_r3","nombre","ɵɵadvance","ɵɵtextInterpolate1","ciudad_r4","ɵɵlistener","CiudadComponent_tr_77_Template_button_click_10_listener","restoredCtx","ɵɵrestoreView","_r8","estado_r5","$implicit","ctx_r7","ɵɵnextContext","ɵɵresetView","editarEstado","CiudadComponent_tr_77_Template_button_click_12_listener","ctx_r9","eliminarEstado","_id","ɵɵtextInterpolate","i_r6","pais","ciudad","CiudadComponent","constructor","estadoService","paisService","fb","toastrService","ciudades","paises","datosPaises","editingCiudadId","ciudadForm","group","required","ngOnInit","cargarCiudades","cargarPaises","getDatosP","subscribe","data","console","log","error","crearCiudad","event","preventDefault","valid","nuevaCiudad","value","addDatosP","reset","success","warning","seleccionarCiudad","cargarDatosP","eliminarCiudad","id","deleteDatosP","editarCiudad","patchValue","actualizarCiudad","updateDatosP","_","ɵɵdirectiveInject","i1","EstadoService","i2","DatosPService","i3","FormBuilder","i4","ToastrService","_2","selectors","decls","vars","consts","template","CiudadComponent_Template","rf","ctx","ɵɵelement","CiudadComponent_Template_form_ngSubmit_34_listener","$event","crearEstado","ɵɵtemplate","CiudadComponent_option_45_Template","CiudadComponent_option_52_Template","CiudadComponent_Template_button_click_56_listener","actualizarEstado","CiudadComponent_tr_77_Template","estadoForm","datosCiudad","estados"],"sources":["C:\\Users\\Brayan Mendiola\\Documents\\GitHub\\IndraTorres\\src\\client\\src\\app\\components\\ciudad\\ciudad.component.ts","C:\\Users\\Brayan Mendiola\\Documents\\GitHub\\IndraTorres\\src\\client\\src\\app\\components\\ciudad\\ciudad.component.html"],"sourcesContent":["// ciudad.component.ts\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { EstadoModel, DatosPModel } from '../../models/datosPModel';\r\nimport { EstadoService } from '../../services/ciudad.service';\r\nimport { DatosPService } from '../../services/datos-pservice.service';\r\n\r\n@Component({\r\n  selector: 'app-ciudad',\r\n  templateUrl: './ciudad.component.html',\r\n  styleUrls: ['./ciudad.component.css']\r\n})\r\nexport class CiudadComponent implements OnInit {\r\n  ciudades: EstadoModel[] = [];\r\n  paises: DatosPModel[] = [];\r\n  datosPaises: DatosPModel[] = [];\r\n  ciudadForm: FormGroup;\r\n  editingCiudadId: string | null = null; // Inicializado como null\r\n\r\n  constructor(\r\n    private estadoService: EstadoService,\r\n    private paisService: DatosPService,\r\n    private fb: FormBuilder,\r\n    private toastrService:ToastrService\r\n  ) {\r\n    this.ciudadForm = this.fb.group({\r\n      _id: [null], // Cambiado de '\"\"' a 'null'\r\n      nombre: ['', Validators.required],\r\n      pais: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.cargarCiudades();\r\n    this.cargarPaises();\r\n  }\r\n\r\n  cargarCiudades() {\r\n    this.estadoService.getDatosP().subscribe(\r\n      data => {\r\n        this.ciudades = data;\r\n        console.log('Ciudades cargadas:', this.ciudades);\r\n      },\r\n      error => {\r\n        console.error('Error al cargar ciudades:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  cargarPaises() {\r\n    this.paisService.getDatosP().subscribe(\r\n      data => {\r\n        this.datosPaises = data; // Actualizar la propiedad datosPaises\r\n        console.log('Datos de países cargados:', this.datosPaises);\r\n      },\r\n      error => {\r\n        console.error('Error al cargar datos de países:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  crearCiudad(event: Event) {\r\n    event.preventDefault();\r\n  \r\n    if (this.ciudadForm.valid) {\r\n      const nuevaCiudad: EstadoModel = {\r\n        nombre: this.ciudadForm.value.nombre,\r\n        pais: this.ciudadForm.value.pais,\r\n      };\r\n  \r\n      this.estadoService.addDatosP(nuevaCiudad).subscribe(\r\n        data => {\r\n          console.log('Ciudad creada:', data);\r\n          this.ciudadForm.reset();\r\n          this.cargarCiudades();\r\n          this.toastrService.success('Ciudad creada correctamente','Aviso');\r\n        },\r\n        error => {\r\n          console.error('Error al crear ciudad:', error);\r\n          this.toastrService.error('Error al crear la ciudad', 'Error');\r\n        }\r\n      );\r\n    } else {\r\n      console.error('Formulario no válido. Por favor, complete todos los campos requeridos.');\r\n      this.toastrService.warning('Formulario no válido. Por favor, complete todos los campos requeridos.','Advertencia');\r\n    }\r\n  }\r\n\r\n  seleccionarCiudad() {\r\n    // Aquí puedes agregar la lógica que deseas al seleccionar una ciudad\r\n    console.log('Ciudad seleccionada');\r\n  }\r\n  cargarDatosP() {\r\n    this.paisService.getDatosP().subscribe(\r\n      data => {\r\n        this.datosPaises = data;\r\n        console.log('Datos cargados:', this.datosPaises);\r\n      },\r\n      error => {\r\n        console.error('Error al cargar datos:', error);\r\n      }\r\n    );\r\n  }\r\n  eliminarCiudad(id: string | undefined) {\r\n    if (id) {\r\n      this.estadoService.deleteDatosP(id).subscribe(\r\n        data => {\r\n          console.log('Ciudad eliminada:', data);\r\n          this.cargarCiudades();\r\n          this.toastrService.success('Ciudad eliminada correctamente','Aviso');\r\n        },\r\n        error => {\r\n          console.error('Error al eliminar ciudad:', error);\r\n          this.toastrService.error('Error al eliminar la ciudad', 'Error');\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  editarCiudad(ciudad: DatosPModel) {\r\n    this.ciudadForm.patchValue(ciudad);\r\n  }\r\n  \r\n  actualizarCiudad() {\r\n    if (this.ciudadForm.valid) {\r\n      this.estadoService.updateDatosP(this.ciudadForm.value).subscribe(\r\n        () => {\r\n          this.cargarCiudades();\r\n          this.ciudadForm.reset();\r\n          this.toastrService.success('Ciudad actualizada correctamente','Aviso');\r\n        },\r\n        error => {\r\n          console.error('Error al actualizar país:', error);\r\n          this.toastrService.error('Error al actualizar la ciudad', 'Error');\r\n\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <div class=\"container-fluid\">\r\n      <a class=\"navbar-brand\" href=\"#\">RentAuto</a>\r\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul class=\"navbar-nav\">\r\n              <li class=\"nav-item\">\r\n                  <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                  <a class=\"nav-link\" href=\"#\">autos</a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                  <a class=\"nav-link\" href=\"#\">Lugar</a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                  <a class=\"nav-link\" href=\"/pais\">Pais</a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                  <a class=\"nav-link\" href=\"/ciudad\">Ciudad</a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                  <a class=\"nav-link\" href=\"/estado\">Estado</a>\r\n              </li>\r\n          </ul>\r\n      </div>\r\n  </div>\r\n</nav>\r\n\r\n<div class=\"container\">\r\n  <br>\r\n  <div class=\"row\">\r\n      <!-- Parte Izquierda - Formulario -->\r\n      <div class=\"col-md-4\">\r\n          <div class=\"card\">\r\n              <div class=\"card-body\">\r\n                  <h5 class=\"card-title\">Agregar/Editar Estado</h5>\r\n                  <form [formGroup]=\"estadoForm\" (ngSubmit)=\"crearEstado($event)\">\r\n                      <div class=\"form-group\">\r\n                          <label for=\"city-name\">Nombre del Estado:</label>\r\n                          <input type=\"text\" class=\"form-control\" id=\"city-name\" formControlName=\"nombre\"\r\n                              required>\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                          <label for=\"country-select\">Selecciona un País:</label>\r\n                          <select class=\"form-control\" id=\"country-select\" formControlName=\"pais\">\r\n                              <option value=\"\" disabled selected>Elige un país</option>\r\n                              <option *ngFor=\"let pais of datosPaises\" [value]=\"pais.nombre\">\r\n                                  {{ pais.nombre }}\r\n                              </option>\r\n                          </select>\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                          <label for=\"city-select\">Selecciona una Ciudad:</label>\r\n                          <select class=\"form-control\" id=\"city-select\" formControlName=\"ciudad\">\r\n                              <option value=\"\" disabled selected>Elige una ciudad</option>\r\n                              <option *ngFor=\"let ciudad of datosCiudad\" [value]=\"ciudad.nombre\">\r\n                                  {{ ciudad.nombre }}\r\n                              </option>\r\n                          </select>\r\n                      </div>\r\n                      <br>\r\n                      <button type=\"submit\" class=\"btn btn-primary\">Agregar</button>\r\n                      <button type=\"button\" class=\"btn btn-success ms-2\"\r\n                          (click)=\"actualizarEstado()\">Actualizar</button>\r\n                  </form>\r\n              </div>\r\n          </div>\r\n      </div>\r\n\r\n      <!-- Parte Derecha - Lista de Estados -->\r\n      <div class=\"col-md-8\">\r\n          <div class=\"card\">\r\n              <div class=\"card-body\">\r\n                  <h5 class=\"card-title\">Estados Agregados</h5>\r\n                  <table class=\"table\">\r\n                      <thead>\r\n                          <tr>\r\n                              <th scope=\"col\">#</th>\r\n                              <th scope=\"col\">Nombre</th>\r\n                              <th scope=\"col\">País</th>\r\n                              <th scope=\"col\">Ciudad</th>\r\n                              <th scope=\"col\">Acciones</th>\r\n                          </tr>\r\n                      </thead>\r\n                      <tbody id=\"country-table-body\">\r\n                          <tr *ngFor=\"let estado of estados; let i = index\">\r\n                              <th scope=\"row\">{{ i + 1 }}</th>\r\n                              <td>{{ estado.nombre }}</td>\r\n                              <td>{{ estado.pais }}</td>\r\n                              <td>{{ estado.ciudad }}</td>\r\n                              <td>\r\n                                  <button type=\"button\" class=\"btn btn-sm btn-primary\"\r\n                                      (click)=\"editarEstado(estado)\">Editar</button>\r\n\r\n                                  <button type=\"button\" class=\"btn btn-danger btn-sm ms-2\"\r\n                                      (click)=\"eliminarEstado(estado._id)\">Eliminar</button>\r\n                              </td>\r\n                          </tr>\r\n                      </tbody>\r\n                  </table>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</div>\r\n\r\n<script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>\r\n<script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js\"></script>\r\n<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}