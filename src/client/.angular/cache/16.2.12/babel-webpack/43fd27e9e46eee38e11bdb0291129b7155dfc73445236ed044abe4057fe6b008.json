{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CiudadService {\n  constructor(http) {\n    this.http = http;\n    this.domain = \"http://localhost:3000\"; // Reemplaza con la URL correcta de tu API\n  }\n\n  getEstados() {\n    return this.http.get(`${this.domain}/api/Ciudad`).pipe(map(res => res), catchError(this.handleError));\n  }\n  addEstado(newEstado) {\n    return this.http.post(`${this.domain}/api/Ciudad`, newEstado).pipe(map(res => res), catchError(this.handleError));\n  }\n  deleteEstado(id) {\n    return this.http.delete(`${this.domain}/api/Ciudad/${id}`).pipe(map(res => res), catchError(this.handleError));\n  }\n  updateEstado(newEstado) {\n    return this.http.put(`${this.domain}/api/Ciudad/${newEstado._id}`, newEstado).pipe(map(res => res), catchError(this.handleError));\n  }\n  handleError(error) {\n    console.error('An error occurred:', error);\n    return throwError('Something went wrong, please try again later.');\n  }\n  static #_ = this.ɵfac = function CiudadService_Factory(t) {\n    return new (t || CiudadService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CiudadService,\n    factory: CiudadService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["throwError","catchError","map","CiudadService","constructor","http","domain","getEstados","get","pipe","res","handleError","addEstado","newEstado","post","deleteEstado","id","delete","updateEstado","put","_id","error","console","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Brayan Mendiola\\Documents\\GitHub\\IndraTorres\\src\\client\\src\\app\\services\\estado.service.ts"],"sourcesContent":["// estado.service.ts\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { CuidadModel, EstadoModel } from '../models/datosPModel';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CiudadService {\r\n  private domain: string = \"http://localhost:3000\"; // Reemplaza con la URL correcta de tu API\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getEstados() {\r\n    return this.http.get<EstadoModel[]>(`${this.domain}/api/Ciudad`).pipe(\r\n      map(res => res),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  addEstado(newEstado: EstadoModel) {\r\n    return this.http.post<EstadoModel>(`${this.domain}/api/Ciudad`, newEstado).pipe(\r\n      map(res => res),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  deleteEstado(id: string) {\r\n    return this.http.delete<EstadoModel>(`${this.domain}/api/Ciudad/${id}`).pipe(\r\n      map(res => res),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  updateEstado(newEstado: EstadoModel) {\r\n    return this.http.put(`${this.domain}/api/Ciudad/${newEstado._id}`, newEstado).pipe(\r\n      map(res => res),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  private handleError(error: EstadoModel) {\r\n    console.error('An error occurred:', error);\r\n    return throwError('Something went wrong, please try again later.');\r\n  }\r\n}\r\n"],"mappings":"AAGA,SAASA,UAAU,QAAQ,MAAM;AACjC,SAASC,UAAU,EAAEC,GAAG,QAAQ,gBAAgB;;;AAMhD,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAW,uBAAuB,CAAC,CAAC;EAEV;;EAExCC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAgB,GAAG,IAAI,CAACF,MAAM,aAAa,CAAC,CAACG,IAAI,CACnEP,GAAG,CAACQ,GAAG,IAAIA,GAAG,CAAC,EACfT,UAAU,CAAC,IAAI,CAACU,WAAW,CAAC,CAC7B;EACH;EAEAC,SAASA,CAACC,SAAsB;IAC9B,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAc,GAAG,IAAI,CAACR,MAAM,aAAa,EAAEO,SAAS,CAAC,CAACJ,IAAI,CAC7EP,GAAG,CAACQ,GAAG,IAAIA,GAAG,CAAC,EACfT,UAAU,CAAC,IAAI,CAACU,WAAW,CAAC,CAC7B;EACH;EAEAI,YAAYA,CAACC,EAAU;IACrB,OAAO,IAAI,CAACX,IAAI,CAACY,MAAM,CAAc,GAAG,IAAI,CAACX,MAAM,eAAeU,EAAE,EAAE,CAAC,CAACP,IAAI,CAC1EP,GAAG,CAACQ,GAAG,IAAIA,GAAG,CAAC,EACfT,UAAU,CAAC,IAAI,CAACU,WAAW,CAAC,CAC7B;EACH;EAEAO,YAAYA,CAACL,SAAsB;IACjC,OAAO,IAAI,CAACR,IAAI,CAACc,GAAG,CAAC,GAAG,IAAI,CAACb,MAAM,eAAeO,SAAS,CAACO,GAAG,EAAE,EAAEP,SAAS,CAAC,CAACJ,IAAI,CAChFP,GAAG,CAACQ,GAAG,IAAIA,GAAG,CAAC,EACfT,UAAU,CAAC,IAAI,CAACU,WAAW,CAAC,CAC7B;EACH;EAEQA,WAAWA,CAACU,KAAkB;IACpCC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,OAAOrB,UAAU,CAAC,+CAA+C,CAAC;EACpE;EAAC,QAAAuB,CAAA,G;qBApCUpB,aAAa,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbzB,aAAa;IAAA0B,OAAA,EAAb1B,aAAa,CAAA2B,IAAA;IAAAC,UAAA,EAFZ;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}