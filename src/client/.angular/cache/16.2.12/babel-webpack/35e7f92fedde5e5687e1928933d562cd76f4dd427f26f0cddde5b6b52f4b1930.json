{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CiudadService {\n  constructor(http) {\n    this.http = http;\n    this.domain = \"http://localhost:3000\";\n  }\n  getDatosP() {\n    return this.http.get(`${this.domain}/api/Ciudad`).pipe(map(res => res));\n  }\n  addDatosP(newDatosP) {\n    return this.http.post(`${this.domain}/api/Ciudad`, newDatosP).pipe(map(res => res));\n  }\n  deleteDatosP(id) {\n    return this.http.delete(`${this.domain}/api/Ciudad/${id}`).pipe(map(res => res));\n  }\n  updateDatosP(newDatosP) {\n    return this.http.put(`${this.domain}/api/Ciudad/${newDatosP._id}`, newDatosP).pipe(map(res => res));\n  }\n  static #_ = this.ɵfac = function CiudadService_Factory(t) {\n    return new (t || CiudadService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CiudadService,\n    factory: CiudadService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","CiudadService","constructor","http","domain","getDatosP","get","pipe","res","addDatosP","newDatosP","post","deleteDatosP","id","delete","updateDatosP","put","_id","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Brayan Mendiola\\Documents\\GitHub\\IndraTorres\\src\\client\\src\\app\\services\\ciudad.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport{CuidadModel} from'../models/datosPModel';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CiudadService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n  domain: string=\"http://localhost:3000\";\r\n  getDatosP() {\r\n    return this.http.get<CuidadModel[]>(`${this.domain}/api/Ciudad`).pipe(\r\n      map(res => res)\r\n    );\r\n  }\r\n\r\n  addDatosP(newDatosP: CuidadModel){\r\n    return this.http.post<CuidadModel>(`${this.domain}/api/Ciudad`,newDatosP).pipe(\r\n      map(res => res)\r\n      );\r\n  }\r\n\r\n  deleteDatosP(id: string){\r\n    return this.http.delete<CuidadModel>(`${this.domain}/api/Ciudad/${id}`).pipe(\r\n      map(res => res)\r\n      );\r\n  }\r\n  updateDatosP(newDatosP: CuidadModel) {\r\n    return this.http.put(`${this.domain}/api/Ciudad/${newDatosP._id}`, newDatosP).pipe(\r\n      map(res => res)\r\n    );\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAASA,GAAG,QAAQ,gBAAgB;;;AAMpC,OAAM,MAAOC,aAAa;EAExBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IACxB,KAAAC,MAAM,GAAS,uBAAuB;EADE;EAExCC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAgB,GAAG,IAAI,CAACF,MAAM,aAAa,CAAC,CAACG,IAAI,CACnEP,GAAG,CAACQ,GAAG,IAAIA,GAAG,CAAC,CAChB;EACH;EAEAC,SAASA,CAACC,SAAsB;IAC9B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAc,GAAG,IAAI,CAACP,MAAM,aAAa,EAACM,SAAS,CAAC,CAACH,IAAI,CAC5EP,GAAG,CAACQ,GAAG,IAAIA,GAAG,CAAC,CACd;EACL;EAEAI,YAAYA,CAACC,EAAU;IACrB,OAAO,IAAI,CAACV,IAAI,CAACW,MAAM,CAAc,GAAG,IAAI,CAACV,MAAM,eAAeS,EAAE,EAAE,CAAC,CAACN,IAAI,CAC1EP,GAAG,CAACQ,GAAG,IAAIA,GAAG,CAAC,CACd;EACL;EACAO,YAAYA,CAACL,SAAsB;IACjC,OAAO,IAAI,CAACP,IAAI,CAACa,GAAG,CAAC,GAAG,IAAI,CAACZ,MAAM,eAAeM,SAAS,CAACO,GAAG,EAAE,EAAEP,SAAS,CAAC,CAACH,IAAI,CAChFP,GAAG,CAACQ,GAAG,IAAIA,GAAG,CAAC,CAChB;EACH;EAAC,QAAAU,CAAA,G;qBAzBUjB,aAAa,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbtB,aAAa;IAAAuB,OAAA,EAAbvB,aAAa,CAAAwB,IAAA;IAAAC,UAAA,EAFZ;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}